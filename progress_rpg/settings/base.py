"""
Django settings for progress_rpg project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import dj_database_url
from decouple import Config, RepositoryEnv, config
import os
from dotenv import load_dotenv
import logging, ssl, sentry_sdk
from .utils import is_vite_running

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent

dotenv_path = BASE_DIR / ".env"
load_dotenv(dotenv_path)

DEBUG = os.getenv("DEBUG", "True") == "True"
os.environ.setdefault("DEBUG", "True")


os.environ.setdefault(
    "DJANGO_SETTINGS_MODULE",
    os.getenv("DJANGO_SETTINGS_MODULE", "progress_rpg.settings.dev"),
)

sentry_sdk.init(
    dsn="https://644b2888f8bc11ad45e1975cde787ef6@o4509508988764160.ingest.de.sentry.io/4509508990926928",
    # Add data like request headers and IP for users,
    # see https://docs.sentry.io/platforms/python/data-management/data-collected/ for more info
    send_default_pii=True,
    traces_sample_rate=1.0,
)

APP_VERSION = "0.6.0-alpha"

TOKEN_MODEL = None

# Application definition

INSTALLED_APPS = [
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "rest_framework",
    "django_filters",
    "dj_rest_auth",
    "rest_framework_simplejwt",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "corsheaders",
    "rest_framework_simplejwt.token_blacklist",
    "rest_framework.authtoken",
    "django.contrib.admin",
    "django.contrib.sessions",
    "django.contrib.sites",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_celery_beat",
    "django_extensions",
    "channels",
    "django_vite",
    "users",
    "gameplay",
    "character",
    "gameworld",
    "events",
    "locations",
    "payments",
    "server_management",
    "django_ratelimit",
    "decouple",
]

SITE_ID = 1

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "allauth.account.middleware.AccountMiddleware",
    #'server_management.middleware.MaintenanceModeMiddleware',
    #'server_management.middleware.BlockBotMiddleware',
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "progress_rpg.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# WSGI_APPLICATION = 'progress_rpg.wsgi.application'
ASGI_APPLICATION = "progress_rpg.asgi.application"


REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",  #'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    "DEFAULT_RENDERER_CLASSES_OPTIONS": {
        "template_pack": "rest_framework/vertical",
        "DEFAULT_FORM_RENDERER": "rest_framework.renderers.TemplateHTMLRenderer",
    },
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        #'rest_framework.authentication.SessionAuthentication',
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
}

REST_AUTH_REGISTER_SERIALIZERS = {
    "REGISTER_SERIALIZER": "api.serializers.CustomRegisterSerializer",
}

SIMPLE_JWT = {
    "AUTH_HEADER_TYPES": ("Bearer",),
}

REST_USE_JWT = True


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTHENTICATION_BACKENDS = [
    "users.auth_backends.EmailBackend",
    "django.contrib.auth.backends.ModelBackend",  # fallback default
]


ACCOUNT_ADAPTER = "users.adapters.CustomAccountAdapter"
AUTH_USER_MODEL = "users.CustomUser"
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = "email"
ACCOUNT_EMAIL_VERIFICATION = "mandatory"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_EMAIL_CONFIRMATION_HTML_TEMPLATE = (
    "account/email/email_confirmation_message.html"
)
ACCOUNT_EMAIL_CONFIRMATION_TEMPLATE = "account/email/email_confirmation_message.txt"


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-gb"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True


# Vite settings

DEV_MODE = os.getenv("DJANGO_VITE_DEV_MODE", "True") == "True"
print("DEV_MODE =", DEV_MODE)

DJANGO_VITE = {
    "default": {
        "dev_mode": DEV_MODE,
        "dev_server_port": 5173,
        "dev_server_host": "localhost",
        "static_url_prefix": "frontend/",
        "manifest_path": BASE_DIR / "static" / "frontend" / ".vite" / "manifest.json",
    }
}


FRONTEND_URL = os.getenv("FRONTEND_URL", "http://localhost:5173")

if FRONTEND_URL.startswith("http://localhost"):
    if is_vite_running():
        FRONTEND_URL = f"{FRONTEND_URL}:5173"
        print("Vite status: Vite server is running!")
    else:
        FRONTEND_URL = f"{FRONTEND_URL}:8000"
        print("Vite status: Django serving React from static files")


# Static files

PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))

STATIC_URL = "/static/"
STATICFILES_BASE = BASE_DIR / "static"
STATICFILES_DIRS = [
    STATICFILES_BASE,
]
STATIC_ROOT = BASE_DIR / "staticfiles"

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# Email settings (host, port and password are at top)
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "admin@progressrpg.com"
DEFAULT_FROM_EMAIL = "admin@progressrpg.com"

# Optionally, configure for error emails
ADMINS = [
    ("Admin", "admin@progressrpg.com")
]  # The emails to receive error notifications


LOGIN_REDIRECT_URL = "/"  # Or wherever you want to go after login
LOGIN_URL = "/login/"  # Customize the login URL

STRIPE_PUBLIC_KEY = "pk_test_51QNRgsGHaENuGVuPh70KmxNTGK3iQPJgjGO2gVcdE0dlRDG7LOZfY3zQxvEdR2hmXDKaEILIRKEnJdn69arGwKCi00bSZWzrzW"
STRIPE_SECRET_KEY = "nope"

CELERY_ACCEPT_CONTENT = ["application/json"]
CELERY_TASK_SERIALIZER = "json"
CELERY_RESULT_SERIALIZER = "json"
CELERY_TASK_ALWAYS_EAGER = False
CELERY_TASK_EAGER_PROPAGATES = False
CELERY_ENABLE_UTC = True
CELERY_TIMEZONE = "UTC"
